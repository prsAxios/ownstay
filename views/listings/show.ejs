<% layout("/layouts/boilerplate") %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/starability/1.0.0/starability-basic.min.css">

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10 col-sm-12">
            <div class="card listing-card">
                <div class="card-header text-center">
                    <h3><%= thisListing.title %></h3>
                </div>
                <img src="<%= thisListing.image.url %>" class="card-img-top show-img" alt="listing image">
                <div class="card-body">
                    <p class="card-text"><strong>Owned By:</strong> <%= thisListing.owner.username %></p>
                    <p class="card-text"><strong>Owner Email Address:</strong> <%= thisListing.owner.email %></p>
                    <p class="card-text"><strong>Owner ID:</strong> <%= thisListing.owner._id %></p>
                    <hr />
                    <p class="card-text"><strong>Description:</strong> <%= thisListing.description %></p>
                    <p class="card-text"><strong>Price:</strong> <%= thisListing.price %> &#8377;</p>
                    <p class="card-text"><strong>Location:</strong> <%= thisListing.location %></p>
                    <p class="card-text"><strong>Country:</strong> <%= thisListing.country %></p>
                </div>
                <% if (currentUser && currentUser._id.equals(thisListing.owner._id)) { %>
                    <div class="card-footer text-center">
                        <div class="btn-group" role="group">
                            <form method="get" action="/listings/<%= thisListing.id %>/edit">
                                <button class="btn btn-outline-secondary">Edit</button>
                            </form>
                            <form method="get" action="/listings/<%= thisListing.id %>/delete">
                                <button class="btn btn-outline-danger">Delete</button>
                            </form>
                        </div>
                    </div>
                <% } %>
            </div>

            <hr />

            <% if (currentUser && currentUser._id.equals(thisListing.owner._id)) { %>
                <h4>Leave a Review</h4>
                <form method="post" action="/listings/<%= thisListing.id %>/reviews" novalidate class="needs-validation mb-4">
                    <div class="mb-3">
                        <label for="rating" class="form-label">Rating</label>
                        <fieldset class="starability-basic">
                            <input type="radio" id="star5" name="review[rating]" value="5" />
                            <label for="star5" title="Amazing">5 stars</label>
                            <input type="radio" id="star4" name="review[rating]" value="4" />
                            <label for="star4" title="Very good">4 stars</label>
                            <input type="radio" id="star3" name="review[rating]" value="3" />
                            <label for="star3" title="Average">3 stars</label>
                            <input type="radio" id="star2" name="review[rating]" value="2" />
                            <label for="star2" title="Not good">2 stars</label>
                            <input type="radio" id="star1" name="review[rating]" value="1" checked />
                            <label for="star1" title="Terrible">1 star</label>
                        </fieldset>
                    </div>
                    <div class="mb-3">
                        <label for="comment" class="form-label">Comment</label>
                        <textarea name="review[comment]" id="comment" cols="30" rows="5" class="form-control" required></textarea>
                        <div class="invalid-feedback">Please add some review</div>
                    </div>
                    <button class="btn btn-outline-dark">Submit</button>
                </form>
            <% } %>

            <% if(thisListing.reviews.length > 0){ %>
                <h4>Customer Reviews</h4>
                <div class="row">
                    <% for (let review of thisListing.reviews) { %>
                        <div class="card mb-3 col-md-5 col-sm-12 mx-3">
                            <div class="card-header">
                                <strong><%= review.author.username %></strong>
                            </div>
                            <div class="card-body">
                                <p class="starability-result" data-rating="<%= review.rating %>"></p>
                                <p class="card-text"><%= review.comment %></p>
                                <p class="text-muted"><%= review.date %></p>
                            </div>
                            <form method="POST" action="/listings/<%= thisListing.id %>/reviews/<%= review.id %>?_method=delete">
                                <button class="btn btn-outline-danger">Delete</button>
                            </form>
                        </div>
                    <% } %>
                </div>
            <% } %>

            <!--Map div-->
            <div class="col-12 mt-5">
                <h3>Where You'll Be</h3>
                <div id="map" class="map-container" style="height: 400px;"></div>
            </div>

            <script>
                let mapToken = "<%=process.env.MAP_TOKEN %>";
                mapboxgl.accessToken = mapToken;
                const map = new mapboxgl.Map({
                    container: 'map',
                    center: [-0.126326, 51.533582],
                    zoom: 15.27,
                    pitch: 42,
                    bearing: -50,
                    style: 'mapbox://styles/mapbox/standard',
                    minZoom: 15,
                    maxZoom: 16
                });

                map.on('style.load', () => {
                    map.setConfigProperty('basemap', 'lightPreset', 'dusk');

                    map.addSource('eraser', {
                        'type': 'geojson',
                        'data': {
                            'type': 'FeatureCollection',
                            'features': [
                                {
                                    'type': 'Feature',
                                    'properties': {},
                                    'geometry': {
                                        'coordinates': [
                                            [
                                                [-0.12573446384880071, 51.53222253720682],
                                                [-0.12458889852425159, 51.53219470021111],
                                                [-0.12358091771250201, 51.53492205161518],
                                                [-0.12701761368793996, 51.53391996847543],
                                                [-0.12573446384880071, 51.53222253720682]
                                            ]
                                        ],
                                        'type': 'Polygon'
                                    }
                                }
                            ]
                        }
                    });

                    map.addSource('model', {
                        'type': 'geojson',
                        'data': {
                            'type': 'Feature',
                            'properties': {
                                'model-uri': 'https://docs.mapbox.com/mapbox-gl-js/assets/tower.glb'
                            },
                            'geometry': {
                                'coordinates': [-0.12501974, 51.5332374],
                                'type': 'Point'
                            }
                        }
                    });

                    map.addLayer({
                        'id': 'eraser',
                        'type': 'clip',
                        'source': 'eraser',
                        'layout': {
                            'clip-layer-types': ['symbol', 'model']
                        }
                    });

                    map.addLayer({
                        'id': 'tower',
                        'type': 'model',
                        'source': 'model',
                        'minzoom': 15,
                        'layout': {
                            'model-id': ['get', 'model-uri']
                        },
                        'paint': {
                            'model-opacity': 1,
                            'model-rotation': [0.0, 0.0, 35.0],
                            'model-scale': [0.8, 0.8, 1.2],
                            'model-color-mix-intensity': 0,
                            'model-cast-shadows': true,
                            'model-emissive-strength': 0.8
                        }
                    });
                });
            </script>
        </div>
    </div>
</div>

<!-- Custom Styles -->
<style>
    /* Apply ChatGPT font family and size */
    body, .card-header, .card-text, .form-label, .btn, .starability-result {
        font-family: 'Inter', sans-serif; /* Replace with your desired font family */
        font-size: 16px; /* Adjust as needed */
        color: #333; /* Default color for text */
    }

    .listing-card {
        border: 1px solid #ddd; /* Light gray border for the card */
    }

    .show-img {
        max-width: 100%; /* Ensure image is responsive */
        height: auto;
    }

    /* Custom button colors */
    .btn-outline-secondary {
        background-color: #4A90E2; /* Replace with the desired color */
        color: white;
        border: none;
    }

    .btn-outline-secondary:hover {
        background-color: #357ABD; /* Darker shade for hover effect */
        color: white;
    }

    .btn-outline-danger {
        background-color: #D9534F; /* Replace with the desired color */
        color: white;
        border: none;
    }

    .btn-outline-danger:hover {
        background-color: #C9302C; /* Darker shade for hover effect */
        color: white;
    }

    .btn-outline-dark {
        background-color: #333; /* Replace with the desired color */
        color: white;
        border: none;
    }

    .btn-outline-dark:hover {
        background-color: #000; /* Darker shade for hover effect */
        color: white;
    }

    .btn-outline-secondary, .btn-outline-danger, .btn-outline-dark {
        border-radius: 20px; /* Rounded corners for buttons */
    }

    .starability-basic {
        font-size: 18px; /* Adjust star size */
    }
</style>
